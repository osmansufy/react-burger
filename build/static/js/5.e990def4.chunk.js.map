{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","IngredientsName","push","name","amount","ingredientsOutput","map","igKey","style","textTransform","display","margin","padding","border","key","className","classes","Order","Number","parseFloat","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","erroHandler","useEffect","Spinner","id","axios"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,2B,8EC6BXC,EA1BH,SAACC,GACb,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAmBF,EAAMC,YAC7BA,EAAYE,KAAK,CAACC,KAAKF,EAAiBG,OAAOL,EAAMC,YAAYC,KAGrE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACzC,OAAO,0BACPC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,QAAQ,MACRC,OAAQ,aAEZC,IAAKP,EAAMJ,MAAOI,EAAMJ,KARjB,IAQwBI,EAAMH,WAEjC,OACA,yBAAKW,UAAWC,IAAQC,OAC5B,oCAAUC,OAAOC,WAAYpB,EAAMqB,OAAOC,QAAQ,IACjDhB,I,uCCsBciB,uBAfO,SAACC,GACnB,MAAM,CACAC,OAAOD,EAAMzB,MAAM0B,OACnBC,QAAQF,EAAMzB,MAAM2B,QACpBC,MAAMH,EAAMI,KAAKD,MACjBE,OAAOL,EAAMI,KAAKC,WAGH,SAACC,GAC1B,MAAM,CACFC,cAAc,SAACJ,EAAME,GAAP,OAAiBC,EAASE,IAAmBL,EAAME,QAKtDN,CAA6CU,aAvC/C,SAAAjC,GAAS,IAChB+B,EAAe/B,EAAf+B,cACFG,qBAAU,WACdlC,EAAM+B,cAAc/B,EAAM2B,MAAM3B,EAAM6B,UAChC,CAACE,IAGH,IAAIN,EAAQ,kBAACU,EAAA,EAAD,MAOZ,OALInC,EAAM0B,UACND,EAAQzB,EAAMyB,OAAOlB,KAAI,SAAAR,GAAK,OAC1B,kBAAC,EAAD,CAAOgB,IAAKhB,EAAMqC,GAAInC,YAAaF,EAAME,YAAaoB,MAAOtB,EAAMsB,YAM3E,6BACHI,KAqB8EY","file":"static/js/5.e990def4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","import React from 'react'\r\n\r\nimport classes from './Order.css'\r\n\r\nconst order=(props)=>{\r\nconst ingredients = []\r\nfor(let IngredientsName in props.ingredients){\r\n    ingredients.push({name:IngredientsName, amount:props.ingredients[IngredientsName]})\r\n}\r\n\r\nconst ingredientsOutput= ingredients.map(igKey=>{\r\nreturn <span\r\nstyle={{\r\n    textTransform:'capitalize',\r\n    display:'inline-block',\r\n    margin:'0 8px',\r\n    padding:'5px',\r\n    border: '1px solid'\r\n}}\r\nkey={igKey.name}>{igKey.name} {igKey.amount}</span>\r\n})\r\n    return(\r\n    <div className={classes.Order}>\r\n<p>Price:{Number.parseFloat( props.price).toFixed(2)}</p>\r\n{ingredientsOutput}\r\n{/* <p>ingredients:{props.ingredients}</p> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default order","import React ,{ useEffect } from \"react\";\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport erroHandler from '../../components/withErrorHandler/withErrorHandler'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nconst Orders=props=> {\r\nconst{onFetchOrders}=props\r\n    useEffect(()=>{\r\nprops.onFetchOrders(props.token,props.userId)\r\n    },[onFetchOrders])\r\n\r\n\r\n    let orders= <Spinner />\r\n\r\n    if(!props.loading){\r\n        orders= props.orders.map(order=>(\r\n            <Order key={order.id} ingredients={order.ingredients} price={order.price} />\r\n           ))\r\n    }\r\n    return(\r\n\r\n\r\n    <div>\r\n{orders}\r\n    \r\n  \r\n    </div>)\r\n\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n          orders:state.order.orders,\r\n          loading:state.order.loading,\r\n          token:state.auth.token,\r\n          userId:state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\n    onFetchOrders:(token,userId)=> dispatch(actions.fetchOrder(token,userId))\r\n}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (erroHandler(Orders,axios))"],"sourceRoot":""}