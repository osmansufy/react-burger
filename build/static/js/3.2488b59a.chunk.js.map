{"version":3,"sources":["containers/Checkout/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.css"],"names":["ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","maxLength","minLength","country","email","deliveryMethod","options","displayValue","formIsvalid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","formInputValid","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","inValid","shouldValidate","changed","Button","disabled","btnType","loading","Spinner","className","classes","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","checkoutSummary","CheckoutSummary","style","width","margin","Burger","clicked","checkoutCancelled","checkoutContinued","Checkout","CheckoutCancelledHandler","history","goBack","CheckoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.2488b59a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport {connect} from 'react-redux'\nimport * as actions from '../../../store/actions/index'\nimport withErrorHandler from '../../../components/withErrorHandler/withErrorHandler'\nimport {updateObject, checkValidity} from '../../../shared/utiliy'\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched:false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched:false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation:{\n                    required: true,\n                    maxLength: 5,\n                    minLength:1\n                },\n                valid: false,\n                touched:false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched:false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched:false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                validation:{},\n                value: 'fastest',\n                valid : true\n            }\n        },\n      \n        formIsvalid : false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        \n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        \n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId:this.props.userId\n        }\n       this.props.onOrderBurger(order,this.props.token)\n    \n    }\n  \n\n    inputChangedHandler = (event,inputIdentifier) => {\n        \n\n      \n        const updatedFormElement=updateObject(this.state.orderForm[inputIdentifier],{\n            value:event.target.value,\n            valid:checkValidity(event.target.value,this.state.orderForm[inputIdentifier].validation),\n            touched:true\n        })      \n    \n        const updatedOrderForm=updateObject(this.state.orderForm,{\n            [inputIdentifier]:updatedFormElement\n        })\n    \n     let formIsvalid = true \n\n     for( let formInputValid in updatedOrderForm){\n         formIsvalid = updatedOrderForm[formInputValid].valid && formIsvalid\n     }\n\n     this.setState({orderForm: updatedOrderForm , formIsvalid: formIsvalid})\n        }\n    \n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n           {formElementsArray.map(formElement=>(\n               <Input \n               key={formElement.id} \n               elementType={formElement.config.elementType} \n               elementConfig={formElement.config.elementConfig}  \n               value={formElement.config.value}\n               inValid={!formElement.config.valid}\n               shouldValidate={formElement.config.validation}\n               touched={formElement.config.touched}\n               changed={(event)=>this.inputChangedHandler(event,formElement.id)}\n               />\n           ))}\n                <Button disabled={!this.state.formIsvalid} btnType=\"Success\">ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token:state.auth.token,\n        userId:state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react';\nimport ContactData from './ContactData/ContactData'\n\nimport {Route,Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n\n\nclass Checkout extends Component {\n\n//     componentWillMount(){\n//     const quary = new URLSearchParams (this.props.location.search)\n//     const ingredients={}\n//     for(let param in quary.entries()){\n//         ingredients[param[0]] =  +param[1]\n//     }\n//     this.setState({ingredients:ingredients})\n// }\n\n    CheckoutCancelledHandler=()=>{\n        this.props.history.goBack()\n    }\n    CheckoutContinuedHandler=()=>{\n        this.props.history.replace('/checkout/contact-data')\n    }\n   \n    render () {\n        let summary= <Redirect to=\"/\" />\n        if(this.props.ings){\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary= (<div>\n                {purchasedRedirect}\n            <CheckoutSummary\n                ingredients={this.props.ings}\n                checkoutCancelled={this.CheckoutCancelledHandler}\n                checkoutContinued={this.CheckoutContinuedHandler}\n               />\n               <Route path={this.props.match.path + '/contact-data'} \n               component={ContactData}\n               />\n          \n        </div>)\n        }\n        return summary\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n       \n       \n    };\n}\n\nexport default connect(mapStateToProps) (Checkout);","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n\n    let inputClasses=[classes.InputElement]\n    \n    if(props.inValid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n            className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n             \n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n            className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                \n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};"],"sourceRoot":""}